"""
Django settings for blizzard project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
import sys
import os
import dj_database_url   #for heroku

from pathlib import Path
from decouple import config  #for env variable

#from dotenv import load_dotenv


#load_dotenv()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('APP_SECRET_KEY')
#SECRET_KEY = os.environ.get('APP_SECRET_KEY', 'some_random_default_string')

#SECRET_KEY = ''

#SECURITY WARNING: don't run with debug turned on in production!

#DEBUG = True
DEBUG = config('DEBUG', cast=bool)
#DEBUG= os.environ.get('DEBUG', False)

#for heroku app
#ALLOWED_HOSTS = ['blizzard-car.herokuapp.com', 'blizzardauto.fi', 'www.blizzardauto.fi' ]

#for pythonanywhere deploy
#ALLOWED_HOSTS = ['blizzard-car.com', 'blizzardauto.fi', 'www.blizzardauto.fi' ]

#for AWS:
#ALLOWED_HOSTS = ['blizzard-dev.us-west-2.elasticbeanstalk.com']

#for local server
ALLOWED_HOSTS = []
LOGIN_REDIRECT_URL = 'dashboard' #after successful login user will be redirected to the dashboard


# Here are all of my installed Applications

INSTALLED_APPS = [
    'cars.apps.CarsConfig',
    'pages.apps.PagesConfig',
    'accounts.apps.AccountsConfig',
    'contacts.apps.ContactsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ckeditor',
    'django.contrib.humanize',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    #Social account providers:
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.google',
]

#lessons for social login:
#https://www.digitalocean.com/community/tutorials/how-to-authenticate-django-apps-using-django-allauth
#https://learndjango.com/tutorials/django-allauth-tutorial
#https://jinkwon711.medium.com/django-allauth-facebook-login-b536444cbc6b
#https://www.section.io/engineering-education/django-google-oauth/


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'blizzard.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blizzard.wsgi.application' #as mentioned in wsgi.py


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'blizzard_db',
        'USER': 'postgres',
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': 'localhost',
     }
 }

#for heroku server....use password before

#DATABASES = {'default': dj_database_url.config(default='postgres://postgres:my_password@localhost/blizzard_db')}

DEFAULT_AUTO_FIELD='django.db.models.AutoField'


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'blizzard/static'),
]

# Media Settings

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Messages: https://docs.djangoproject.com/en/4.1/ref/contrib/messages/

from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.ERROR: 'danger',
}

SITE_ID = 1

# for herokuapp

#SITE_ID = 3

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'finfotek80@gmail.com'
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
#EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
#for herokuapp
#EMAIL_HOST_PASSWORD = ''
EMAIL_USE_TLS = True


# [ Email sending : https://docs.djangoproject.com/en/4.1/topics/email/
# https://support.google.com/mail/answer/185833?hl=en-GB ]


# whitenoise settings

#STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

TESTING = len(sys.argv) > 1 and sys.argv[1] == 'test'

STATICFILES_STORAGE = (
    'django.contrib.staticfiles.storage.StaticFilesStorage'
    if TESTING
    else 'whitenoise.storage.CompressedManifestStaticFilesStorage'
)